version: "2"

services:

  jenkins-master:
    restart: always
    container_name: jenkins-master
    image: quirinobrizi/jenkins:2.3-alpine-cs
    privileged: true
    extra_hosts:
      - "${SERVER_NAME}:${PROXY_HOST}"
    expose:
      - 8080
      - 50000
    environment:
      JENKINS_OPTS: "--argumentsRealm.passwd.admin=password --prefix=/jenkins"
      SECURITY_TYPE: LDAP
      JENKINS_LDAP_DOMAIN: ldap://openldap
      JENKINS_LDAP_SEARCH_BASE: 
      JENKINS_LDAP_USER_SEARCH: uid={0}
      JENKINS_LDAP_GROUP_SEARCH: ou=groups
      AUTHORIZATION_STRATEGY: MATRIX
      AUTHORIZED_ENTITIES: administrators,developers
    volumes:
      - jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock:rw
    networks:
      - codesketch
    env_file:
      - ./environment
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: "jenkins-master"

  jenkins-slave:
    restart: always
    container_name: jenkins-slave-01
    image: quirinobrizi/jenkins-swarm-slave:2.0-cs
    command: "-master http://jenkins-master:8080/jenkins/ -username codesketch -password codesketch -executors 2"
    privileged: true
    user: root
    extra_hosts:
      - "${SERVER_NAME}:${PROXY_HOST}"
    expose:
      - 8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
    depends_on:
      - jenkins-master
    networks:
      - codesketch 
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: "jenkins-slave"
    env_file:
      - ./environment

  artifactory:
    restart: always
    container_name: artifactory
    image: quirinobrizi/artifactory-oss:4.7.1-cs
    expose:
      - 8081
    environment:
      JAVA_OPTS: "-Xms1g -Xmx3g"
    volumes:
      - artifactory-data:/var/opt/jfrog/artifactory/data
      - artifactory-logs:/var/opt/jfrog/artifactory/logs
      - artifactory-backup://var/opt/jfrog/artifactory/backup
    networks:
      - codesketch
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: "artifactory"
    env_file:
      - ./environment

  registry:
    restart: always
    container_name: docker-registry
    image: registry:2.4.1
    expose:
      - 5000
    volumes:
      - docker-registry:/var/lib/registry
    networks:
      - codesketch
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: "registry"
    env_file:
      - ./environment

  lighthouse:
    restart: always
    container_name: lighthouse
    image: quirinobrizi/lighthouse:0.0.2
    expose:
      - 3000
    environment:
      REGISTRY_URL: http://registry:5000
    networks:
      - codesketch
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: "lighthouse"
    env_file:
      - ./environment

  sonarqube:
    restart: always
    container_name: sonarqube
    image: quirinobrizi/sonarqube:5.6.1-alpine-cs
    expose: 
      - 9000
      - 9092
    environment:
      SONARQUBE_JDBC_USERNAME: sonar
      SONARQUBE_JDBC_PASSWORD: sonar
      SONARQUBE_JDBC_URL: jdbc:postgresql://postgresql/sonar
    depends_on:
      - postgresql
    networks:
      - codesketch
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: "sonarqube"
    env_file:
      - ./environment

  postgresql:
    restart: always
    container_name: postgresql
    image: postgres:9.6
    expose:
      - 5432
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWOR: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    networks:
      - codesketch
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: "postgresql"
    env_file:
      - ./environment

  # gitlab:
  #   image: 'gitlab/gitlab-ce:latest'
  #   restart: always
  #   container_name: gitlab
  #   environment:
  #     GITLAB_OMNIBUS_CONFIG: |
  #       external_url 'http://gitlab:9000'
  #       # Add any other gitlab.rb configuration here, each on its own line
  #       # gitlab_rails['nginx_enabled'] = true;
  #   expose:
  #     - 9000
  #   ports:
  #     - '22:22'
  #   volumes:
  #     - 'gitlab-config:/etc/gitlab:Z'
  #     - 'gitlab-logs:/var/log/gitlab:Z'
  #     - 'gitlab-data:/var/opt/gitlab:Z'
  #   networks:
  #     - codesketch

networks:
  codesketch:
    external: true

volumes:
  jenkins:
    driver: local
  artifactory-data:
    driver: local
  artifactory-logs:
    driver: local
  artifactory-backup:
    driver: local
  docker-registry:
    driver: local
  postgresql-data:
    driver: local
  # gitlab-config:
  #   driver: local
  # gitlab-data:
  #   driver: local
  # gitlab-logs:
  #   driver: local