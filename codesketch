#!/usr/bin/env bash -e

function print_jenkins_token_if_present {
	TOKEN=$(docker exec jenkins-master [ -f /var/jenkins_home/secrets/initialAdminPassword ] && cat /var/jenkins_home/secrets/initialAdminPassword)
	if [ ! -z "$TOKEN" ]; then
		echo "Jenkins unlock token: $TOKEN"
	fi
}

function configure {
	echo "Configuring Codesketch"
	docker network create codesketch
	docker-compose -f docker-compose-codesketch.yml pull
	docker-compose -f docker-compose-nginx.yml pull
	echo "... Codesketch configured"
}

function start {
	configure
	echo "Starting Codesketch in you local machine using docker compose ..."
	docker-compose -f docker-compose-codesketch.yml up -d --remove-orphans
	echo "... waiting for Codesketch to start ..."
	sleep 60s
	docker-compose -f docker-compose-nginx.yml up -d
	echo "Codesketch has started"
	echo "!!! Tools setup may take some time !!!"
	exit 0
}

function stop {
	docker-compose -f docker-compose-codesketch.yml stop
	docker-compose -f docker-compose-nginx.yml stop
}

function clean {
	docker-compose -f docker-compose-codesketch.yml rm -f --all
	docker-compose -f docker-compose-nginx.yml rm -f --all
}

function logs {
	docker-compose -f docker-compose-codesketch.yml -f docker-compose-nginx.yml logs -f
}

function usage {
  echo "Usage:"
  echo "    ${0} -s <stop the platform>|-u <start the platfom>|-r <redeploy the platform>"
  exit 1
}

case ${1} in
  start|stop|clean|config|logs)
	case ${1} in
      start)
		start
	  ;;
      stop)
		stop
	  ;;
	  clean)
		clean
	  ;;
	  config)
		configure
	  ;;
	  logs)
		logs
	  ;;
	  *)
        echo "Invalid parameter(s) or option(s)."
        usage
      ;;
    esac
esac